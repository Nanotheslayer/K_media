/**
 * –õ–æ–≥–∏–∫–∞ —á–∞—Ç–∞ —Å –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω—ã–º —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —á–∞—Ç–∞
let currentImage = null;
let chatHistory = [];
let isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
let currentUserId = null; // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω–∞
const typingMessages = [
    'üïµÔ∏è –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –ø—Ä–æ–≤–æ–¥–∏—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ',
    'üîç –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ',
    '‚öôÔ∏è –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –∏–∑—É—á–∞–µ—Ç –º–µ—Ö–∞–Ω–∏–∑–º—ã',
    'üìä –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é',
    'üîé –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –≤–µ–¥—ë—Ç –ø–æ–∏—Å–∫',
    'üí° –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω —Ä–∞–∑–º—ã—à–ª—è–µ—Ç',
    'üìù –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –≥–æ—Ç–æ–≤–∏—Ç –æ—Ç–≤–µ—Ç',
    'üè≠ –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ—Ç—Å—è —Å –∑–∞–≤–æ–¥—á–∞–Ω–∞–º–∏',
    'üìö –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –∏–∑—É—á–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é',
    'üîß –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é'
];

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º
 */
class ChatManager {
    constructor() {
        this.isProcessing = false;
        this.typingIndicatorTimeout = null;
        this.isHistoryLoaded = false;
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞
     */
    initialize() {
        console.log('üí¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞ –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω...');
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        this.updateUserId();
        
        console.log('‚úÖ –ß–∞—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    updateUserId() {
        if (window.TelegramWebApp && window.TelegramWebApp.isInTelegram()) {
            const user = window.TelegramWebApp.getTelegramUser();
            if (user && user.id) {
                const newUserId = `tg_${user.id}`;
                if (currentUserId !== newUserId) {
                    console.log('üë§ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', newUserId);
                    currentUserId = newUserId;
                    this.isHistoryLoaded = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
                }
            }
        } else {
            // –î–ª—è –≤–µ–±-–±—Ä–∞—É–∑–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º session-based ID
            if (!currentUserId) {
                currentUserId = `web_session_${Date.now()}`;
                console.log('üë§ –°–æ–∑–¥–∞–Ω –≤–µ–±-–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä:', currentUserId);
            }
        }
    }

    /**
     * –û—Ç–∫—Ä—ã—Ç–∏–µ —á–∞—Ç–∞
     */
    openChat() {
        const modal = document.getElementById('chatModal');
        modal.style.display = 'block';

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –≤–µ—Ä—Ö—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        window.scrollTo(0, 0);
        document.body.scrollTop = 0;

        // –§–∏–∫—Å–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã —á–∞—Ç–∞ - –ü–û–õ–ù–û–≠–ö–†–ê–ù–ù–´–ô
        const chatModalContent = modal.querySelector('.modal-content.chat-modal');
        if (chatModalContent) {
            chatModalContent.style.height = '100vh';
            chatModalContent.style.maxHeight = '100vh';
            chatModalContent.style.minHeight = '100vh';
            chatModalContent.style.overflow = 'hidden';
            chatModalContent.style.margin = '0';
            chatModalContent.style.borderRadius = '0';
        }

        // –§–æ–∫—É—Å –Ω–∞ input –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            if (window.TelegramWebApp) {
                window.TelegramWebApp.ensureInputVisible();
            }

            const input = document.getElementById('chatInput');
            if (input && !isMobile) {
                input.focus();
            }

            // –°–∫—Ä–æ–ª–ª–∏–º –∫ –∫–æ–Ω—Ü—É —Å–æ–æ–±—â–µ–Ω–∏–π
            this.scrollToBottom();
        }, 200);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (!this.isHistoryLoaded) {
            this.loadChatHistory();
        }

        // Haptic feedback
        if (window.TelegramWebApp) {
            window.TelegramWebApp.triggerHapticFeedback('light');
        }

        console.log('üì± –ß–∞—Ç –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUserId);
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
     */
    async loadChatHistory() {
        try {
            console.log('üìö –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUserId);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
            this.updateUserId();
            
            const data = await window.API.Chat.getHistory();

            console.log('üìú –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', data);

            if (data.success) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∏—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (data.user_id) {
                    console.log('üë§ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.user_id);
                    currentUserId = data.user_id; // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π ID
                }

                if (data.history && data.history.length > 0) {
                    console.log('üìú –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–∞:', data.history.length, '—Å–æ–æ–±—â–µ–Ω–∏–π');

                    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —á–∞—Ç (–∫—Ä–æ–º–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è)
                    const messagesContainer = document.getElementById('chatMessages');
                    const welcomeMessage = messagesContainer.querySelector('.chat-message.bot');
                    messagesContainer.innerHTML = '';
                    if (welcomeMessage) {
                        messagesContainer.appendChild(welcomeMessage);
                    }

                    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
                    data.history.forEach(msg => {
                        if (msg.role === 'user') {
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                            let imageUrl = null;
                            if (msg.parts) {
                                const imagePart = msg.parts.find(part => part.inline_data);
                                if (imagePart) {
                                    imageUrl = `data:${imagePart.inline_data.mime_type};base64,${imagePart.inline_data.data}`;
                                }
                            }

                            const textPart = msg.parts ? msg.parts.find(part => part.text) : null;
                            const messageText = textPart ? textPart.text : '';

                            this.addMessageToChat('user', messageText, imageUrl);
                        } else if (msg.role === 'model') {
                            const textPart = msg.parts ? msg.parts.find(part => part.text) : null;
                            const messageText = textPart ? textPart.text : '';
                            this.addMessageToChat('bot', messageText);
                        }
                    });

                    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
                    chatHistory = data.history.map(msg => ({
                        role: msg.role === 'model' ? 'bot' : msg.role,
                        content: msg.parts && msg.parts.find(part => part.text) ? msg.parts.find(part => part.text).text : ''
                    }));

                    console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∞');
                } else {
                    console.log('üì≠ –ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.user_id || currentUserId);
                }

                this.isHistoryLoaded = true;
            } else {
                console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é:', data.error || 'Unknown error');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º
        }
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
     */
    async clearChatHistory() {
        const confirmMessage = '–û—á–∏—Å—Ç–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–∏–∞–ª–æ–≥–∞ —Å –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω—ã–º?';
        
        if (window.TelegramWebApp) {
            window.TelegramWebApp.showConfirm(confirmMessage, async (confirmed) => {
                if (confirmed) {
                    await this.performClearHistory();
                }
            });
        } else if (confirm(confirmMessage)) {
            await this.performClearHistory();
        }
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
     */
    async performClearHistory() {
        try {
            console.log('üóëÔ∏è –û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUserId);
            
            const data = await window.API.Chat.clearHistory();

            if (data.success) {
                console.log('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.user_id || currentUserId);
                
                // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
                chatHistory = [];

                // –û—á–∏—â–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–∞—Ç–∞ –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                const messagesContainer = document.getElementById('chatMessages');
                messagesContainer.innerHTML = `
                    <div class="chat-message bot">
                        <div class="message-header">üïµÔ∏è –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω</div>
                        –ü—Ä–∏–≤–µ—Ç! –Ø –¥–æ–±—Ä—ã–π –∏ –≤—Å–µ–≥–¥–∞ –∂–µ–ª–∞—é—â–∏–π –ø–æ–º–æ—á—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –ö–∏—Ä–æ–≤—Å–∫–æ–≥–æ –∑–∞–≤–æ–¥–∞ —Å—ã—â–∏–∫.
                        –ú–æ—ë –∏–º—è –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω. –ú–Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—è –æ—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ç—Ä–∞–∫—Ç–æ—Ä—ã ¬´–ö–∏—Ä–æ–≤–µ—Ü¬ª –∏ —Å–ª–æ–∂–Ω—ã–µ –º–µ—Ö–∞–Ω–∏–∑–º—ã,
                        —Å–∏–ª–∞ –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –Ω–∞—à–∏—Ö –∑–∞–≤–æ–¥—á–∞–Ω, –∞ –º–æ—ë —Å–∞–º–æ–µ –ª—é–±–∏–º–æ–µ –∑–∞–Ω—è—Ç–∏–µ - —ç—Ç–æ –ø–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.<br><br>
                        üì∏ –Ø —É–º–µ—é –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è - –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å –≤–æ–ø—Ä–æ—Å–æ–º!<br>
                        üîç –ó–∞–¥–∞–≤–∞–π—Ç–µ –ª—é–±—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∏ —è –Ω–∞–π–¥—É –æ—Ç–≤–µ—Ç—ã!
                    </div>
                `;

                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
                this.isHistoryLoaded = true;

                // Feedback
                if (window.TelegramWebApp) {
                    window.TelegramWebApp.triggerHapticFeedback('success');
                    window.TelegramWebApp.showAlert('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞');
                } else {
                    alert('‚úÖ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –æ—á–∏—â–µ–Ω–∞');
                }

                console.log('üóëÔ∏è –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –æ—á–∏—â–µ–Ω–∞');
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', data.error);
                if (window.TelegramWebApp) {
                    window.TelegramWebApp.showAlert('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏');
                } else {
                    alert('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏');
                }
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', error);
            if (window.TelegramWebApp) {
                window.TelegramWebApp.showAlert('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
            } else {
                alert('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
            }
        }
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    async sendMessage() {
        if (this.isProcessing) return;

        const input = document.getElementById('chatInput');
        const message = input.value.trim();

        console.log('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUserId, {
            message: message,
            messageLength: message.length,
            hasImage: !!currentImage,
            imageFile: currentImage?.file
        });

        if (!message && !currentImage) {
            console.warn('‚ö†Ô∏è –ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
            return;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        this.updateUserId();

        this.isProcessing = true;
        const sendBtn = document.getElementById('chatSendBtn');
        sendBtn.disabled = true;

        // Haptic feedback
        if (window.TelegramWebApp) {
            window.TelegramWebApp.triggerHapticFeedback('medium');
        }

        try {
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç
            this.addMessageToChat('user', message, currentImage ? currentImage.dataUrl : null);

            // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            let imageFile = null;
            if (currentImage) {
                console.log('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª, —Ä–∞–∑–º–µ—Ä:', (currentImage.file.size / 1024 / 1024).toFixed(2), 'MB');
                imageFile = currentImage.file;
            }

            // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
            input.value = '';
            this.removeImage();
            this.autoResize(input);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞
            console.log('‚å®Ô∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
            this.showTypingIndicator();

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
            console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É...');
            const data = await window.API.Chat.sendMessage(message, imageFile);

            console.log('üì® –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç:', data);

            if (data.success) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç –¥–ª—è –Ω–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (data.user_id) {
                    console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', data.user_id);
                    currentUserId = data.user_id; // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π ID
                }

                this.addMessageToChat('bot', data.response);

                // –û–±–Ω–æ–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
                chatHistory.push(
                    { role: 'user', content: message },
                    { role: 'bot', content: data.response }
                );

                // Success haptic feedback
                if (window.TelegramWebApp) {
                    window.TelegramWebApp.triggerHapticFeedback('success');
                }

                console.log('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
            } else {
                this.addMessageToChat('bot', '‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: ' + data.error);

                // Error haptic feedback
                if (window.TelegramWebApp) {
                    window.TelegramWebApp.triggerHapticFeedback('error');
                }
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —á–∞—Ç–∞:', error);
            const errorMessage = window.API.Utils.handleApiError(error, 'Chat');
            this.addMessageToChat('bot', '‚ùå ' + errorMessage);

            // Error haptic feedback
            if (window.TelegramWebApp) {
                window.TelegramWebApp.triggerHapticFeedback('error');
            }
        } finally {
            console.log('üèÅ –ó–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è...');
            this.hideTypingIndicator();
            this.isProcessing = false;
            sendBtn.disabled = false;

            // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∏ —Ñ–æ–∫—É—Å
            setTimeout(() => {
                this.scrollToBottom();

                // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–æ
                if (window.TelegramWebApp) {
                    window.TelegramWebApp.ensureInputVisible();
                }

                if (!isMobile) {
                    const input = document.getElementById('chatInput');
                    if (input) {
                        input.focus();
                    }
                }
            }, 100);
        }
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
     */
    addMessageToChat(role, message, imageUrl = null) {
        const messagesContainer = document.getElementById('chatMessages');
        const messageDiv = document.createElement('div');
        messageDiv.className = `chat-message ${role}`;

        if (role === 'bot') {
            messageDiv.innerHTML = `
                <div class="message-header">üïµÔ∏è –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω</div>
                ${message.replace(/\n/g, '<br>')}
            `;
        } else {
            let content = message.replace(/\n/g, '<br>');
            if (imageUrl) {
                content = `<img src="${imageUrl}" alt="Uploaded image">${content ? '<br>' + content : ''}`;
            }
            messageDiv.innerHTML = content;
        }

        messagesContainer.appendChild(messageDiv);

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Å —É—á–µ—Ç–æ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—è –≤–≤–æ–¥–∞
        setTimeout(() => {
            this.scrollToBottom();
        }, 50);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
     */
    getCurrentUserInfo() {
        const telegramUser = window.TelegramWebApp ? window.TelegramWebApp.getTelegramUser() : null;
        
        return {
            userId: currentUserId,
            telegram: telegramUser,
            isInTelegram: window.TelegramWebApp ? window.TelegramWebApp.isInTelegram() : false,
            historyLoaded: this.isHistoryLoaded
        };
    }

    /**
     * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async testUserIdentification() {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ...');
        
        const userInfo = this.getCurrentUserInfo();
        console.log('üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', userInfo);
        
        try {
            // –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
            const history = await window.API.Chat.getHistory();
            console.log('üìö –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏:', {
                success: history.success,
                user_id: history.user_id,
                messages: history.history ? history.history.length : 0
            });
            
            return userInfo;
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
            return null;
        }
    }

    // –û—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π...
    /**
     * –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
     */
    scrollToBottom() {
        const messagesContainer = document.getElementById('chatMessages');
        if (messagesContainer) {
            messagesContainer.scrollTop = messagesContainer.scrollHeight;
        }
    }

    /**
     * –ü–æ–∫–∞–∑ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
     */
    showTypingIndicator() {
        console.log('üëÄ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –µ—Å–ª–∏ –µ—Å—Ç—å
        this.hideTypingIndicator();
        
        const indicator = document.getElementById('typingIndicator');
        const typingText = document.getElementById('typingText');
        
        if (indicator) {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (typingText) {
                const message = this.getRandomTypingMessage();
                typingText.textContent = message;
                console.log('üìù –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message);
            }
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç
            indicator.classList.add('show');
            indicator.style.display = 'flex';
            indicator.style.visibility = 'visible';
            indicator.style.opacity = '1';
            
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–∫–∞–∑–∞–Ω');
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∏–¥–µ–Ω
            setTimeout(() => {
                const computedStyle = window.getComputedStyle(indicator);
                console.log('üîç –°—Ç–∏–ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞:', {
                    display: computedStyle.display,
                    visibility: computedStyle.visibility,
                    opacity: computedStyle.opacity,
                    hasShowClass: indicator.classList.contains('show')
                });
                
                if (computedStyle.display === 'none') {
                    console.warn('‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–µ –≤–∏–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π');
                    this.showTypingIndicatorAsMessage();
                }
            }, 100);
            
        } else {
            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç typingIndicator –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥');
            this.showTypingIndicatorAsMessage();
        }
        
        // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É
        setTimeout(() => {
            this.scrollToBottom();
        }, 50);
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–∞–±–æ—Ä–∞ —Ç–µ–∫—Å—Ç–∞
     */
    hideTypingIndicator() {
        console.log('üõë –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
        
        // –°–∫—Ä—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        const indicator = document.getElementById('typingIndicator');
        if (indicator) {
            indicator.classList.remove('show');
            indicator.style.display = 'none';
            indicator.style.visibility = 'hidden';
            indicator.style.opacity = '0';
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∫—Ä—ã—Ç');
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        this.hideTypingIndicatorMessage();
    }

    /**
     * –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    showTypingIndicatorAsMessage() {
        const messagesContainer = document.getElementById('chatMessages');
        
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä-—Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingIndicator = messagesContainer.querySelector('.typing-message');
        if (existingIndicator) {
            existingIndicator.remove();
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
        const typingMessage = document.createElement('div');
        typingMessage.className = 'chat-message bot typing-message';
        typingMessage.style.opacity = '0.8';
        typingMessage.style.fontStyle = 'italic';
        
        const message = this.getRandomTypingMessage();
        typingMessage.innerHTML = `
            <div class="message-header">üïµÔ∏è –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏–Ω</div>
            <div style="display: flex; align-items: center; gap: 8px;">
                <span>${message}</span>
                <div class="typing-dots">
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                    <div class="typing-dot"></div>
                </div>
            </div>
        `;
        
        messagesContainer.appendChild(typingMessage);
        this.scrollToBottom();
        
        console.log('üì® –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –¥–æ–±–∞–≤–ª–µ–Ω –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ');
    }

    /**
     * –°–∫—Ä—ã—Ç–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
     */
    hideTypingIndicatorMessage() {
        const messagesContainer = document.getElementById('chatMessages');
        const typingMessage = messagesContainer.querySelector('.typing-message');
        
        if (typingMessage) {
            typingMessage.remove();
            console.log('üì® –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω');
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
     */
    getRandomTypingMessage() {
        return typingMessages[Math.floor(Math.random() * typingMessages.length)];
    }

    /**
     * –¢–µ—Å—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
     * –î–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å: window.ChatManager.testTypingIndicator()
     */
    testTypingIndicator() {
        console.log('üß™ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç
        const indicator = document.getElementById('typingIndicator');
        console.log('üîç –≠–ª–µ–º–µ–Ω—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞:', indicator);
        
        if (indicator) {
            console.log('üìè –ù–∞—á–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏:', {
                display: window.getComputedStyle(indicator).display,
                visibility: window.getComputedStyle(indicator).visibility,
                opacity: window.getComputedStyle(indicator).opacity
            });
        }
        
        this.showTypingIndicator();
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            console.log('üß™ –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã');
            this.hideTypingIndicator();
        }, 3000);
        
        if (window.TelegramWebApp) {
            window.TelegramWebApp.triggerHapticFeedback('light');
        }
    }

    /**
     * –í—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    selectImage() {
        document.getElementById('imageInput').click();
        if (window.TelegramWebApp) {
            window.TelegramWebApp.triggerHapticFeedback('light');
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    async handleImageSelect(event) {
        const file = event.target.files[0];
        if (!file) return;

        try {
            console.log('üì∑ –í—ã–±—Ä–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:', {
                name: file.name,
                type: file.type,
                size: (file.size / 1024 / 1024).toFixed(2) + 'MB'
            });

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
            if (!file.type.startsWith('image/')) {
                const errorMessage = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è';
                if (window.TelegramWebApp) {
                    window.TelegramWebApp.showAlert(errorMessage);
                } else {
                    alert(errorMessage);
                }
                return;
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            const preview = document.getElementById('imagePreview');
            preview.innerHTML = '<div style="padding: 8px; text-align: center; font-size: 10px; color: #aaa;">üì∑ –û–±—Ä–∞–±–æ—Ç–∫–∞...</div>';
            preview.style.display = 'block';

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å—Ç–∫–∏
            this.setPreviewMode(true);

            // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ñ–∞–π–ª–∞
            const processedFile = await window.API.Utils.prepareImageFile(file);

            // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –ø—Ä–µ–≤—å—é (–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–µ–≤—å—é)
            const reader = new FileReader();
            reader.onload = (e) => {
                currentImage = {
                    file: processedFile, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                    dataUrl: e.target.result,
                    originalName: file.name, // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    processedName: processedFile.name,
                    originalSize: file.size,
                    processedSize: processedFile.size
                };

                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
                const sizeInfo = processedFile.size !== file.size ?
                    ` (—Å–∂–∞—Ç–æ —Å ${(file.size/1024/1024).toFixed(1)}MB –¥–æ ${(processedFile.size/1024/1024).toFixed(1)}MB)` : '';

                preview.innerHTML = `
                <div style="position: relative;">
                    <img src="${e.target.result}" alt="Preview" style="max-width: 100%; max-height: 120px; border-radius: 4px;">
                    <button onclick="removeImage()" style="position: absolute; top: -5px; right: -5px; width: 20px; height: 20px; border-radius: 50%; background: #ff4444; color: white; border: none; font-size: 12px; cursor: pointer; display: flex; align-items: center; justify-content: center;">√ó</button>
                    <div style="font-size: 10px; color: #aaa; margin-top: 4px; text-align: center;">
                        ${file.name}${sizeInfo}
                    </div>
                </div>
            `;

                console.log('‚úÖ –ü—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–æ:', {
                    originalFile: file.name,
                    processedFile: processedFile.name,
                    compression: processedFile.size !== file.size ?
                        ((1 - processedFile.size / file.size) * 100).toFixed(1) + '%' : '–Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'
                });
            };

            // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –ø—Ä–µ–≤—å—é (–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª)
            reader.readAsDataURL(file);

            // Haptic feedback
            if (window.TelegramWebApp) {
                window.TelegramWebApp.triggerHapticFeedback('light');
            }

        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error);

            // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
            const preview = document.getElementById('imagePreview');
            preview.style.display = 'none';
            this.setPreviewMode(false);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            const errorMessage = error.message || '–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è';
            if (window.TelegramWebApp) {
                window.TelegramWebApp.showAlert(errorMessage);
            } else {
                alert(errorMessage);
            }

            // Error haptic feedback
            if (window.TelegramWebApp) {
                window.TelegramWebApp.triggerHapticFeedback('error');
            }
        } finally {
            // –û—á–∏—â–∞–µ–º input –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤—ã–±–æ—Ä–∞ —Ç–æ–≥–æ –∂–µ —Ñ–∞–π–ª–∞
            event.target.value = '';
        }
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    removeImage() {
        currentImage = null;
        document.getElementById('imagePreview').style.display = 'none';
        document.getElementById('imageInput').value = '';

        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å—Ç–∫–∏
        this.setPreviewMode(false);

        // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –ø–æ–ª–µ –≤–≤–æ–¥–∞ –æ—Å—Ç–∞–µ—Ç—Å—è –≤–∏–¥–∏–º—ã–º
        if (window.TelegramWebApp) {
            window.TelegramWebApp.ensureInputVisible();
        }

        if (window.TelegramWebApp) {
            window.TelegramWebApp.triggerHapticFeedback('light');
        }

        console.log('üóëÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
    }

    /**
     * –£—Å—Ç–∞–Ω–æ–≤–∫–∞/—Å–Ω—è—Ç–∏–µ —Ä–µ–∂–∏–º–∞ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
     */
    setPreviewMode(enabled) {
        const inputContainer = document.getElementById('chatInputContainer');
        const chatMessages = document.getElementById('chatMessages');

        if (enabled) {
            if (inputContainer) {
                inputContainer.classList.add('has-preview');
            }
            if (chatMessages) {
                chatMessages.classList.add('has-preview');
            }
        } else {
            if (inputContainer) {
                inputContainer.classList.remove('has-preview');
            }
            if (chatMessages) {
                chatMessages.classList.remove('has-preview');
            }
        }
    }

    /**
     * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ textarea
     */
    autoResize(textarea) {
        textarea.style.height = 'auto';
        textarea.style.height = Math.min(textarea.scrollHeight, 100) + 'px';
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à
     */
    handleKeyDown(event) {
        if (event.key === 'Enter' && !event.shiftKey) {
            event.preventDefault();
            this.sendMessage();
        }
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —á–∞—Ç–∞
const chatManager = new ChatManager();

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
window.openChat = () => chatManager.openChat();
window.clearChatHistory = () => chatManager.clearChatHistory();
window.sendMessage = () => chatManager.sendMessage();
window.selectImage = () => chatManager.selectImage();
window.handleImageSelect = (event) => chatManager.handleImageSelect(event);
window.removeImage = () => chatManager.removeImage();
window.autoResize = (textarea) => chatManager.autoResize(textarea);
window.handleKeyDown = (event) => chatManager.handleKeyDown(event);
window.hideKeyboard = () => {
    if (window.TelegramWebApp) {
        window.TelegramWebApp.hideKeyboard();
    }
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.testUserIdentification = () => chatManager.testUserIdentification();
window.getCurrentUserInfo = () => chatManager.getCurrentUserInfo();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.ChatManager = chatManager;
